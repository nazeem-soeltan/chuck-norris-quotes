name: Build app

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: ./mvnw clean package --no-transfer-progress

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image using Buildpacks
        run: ./mvnw spring-boot:build-image \
          -Ddocker.publishRegistry.username=${{ github.actor }} \
          -Ddocker.publishRegistry.password=${{ secrets.GITHUB_TOKEN }} \
          -Ddocker.publishRegistry.url=${{ env.REGISTRY }} -Dspring-boot.build-image.imageName=ghcr.io/${{ github.repository_owner }}/spring-boot-app:latest \
          -Dspring-boot.build-image.publish=true

#      - name: Verify Docker image
#        run: docker pull ghcr.io/${{ github.repository_owner }}/spring-boot-app:latest
